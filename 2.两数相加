//尾插法  T(n)=O(max(m,n))  S(n)=O(1)
ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode *head = nullptr, *tail = nullptr;
    int carry = 0;
    while (l1 || l2) {
        int n1 = l1 ? l1->val: 0; 
        int n2 = l2 ? l2->val: 0;
        int sum = n1 + n2 + carry;
        carry = sum / 10;
        if (!head) {
            head = tail = new ListNode(sum % 10);  //边界条件(头)
        } else {
            tail->next = new ListNode(sum % 10);  //尾插主体
            tail = tail->next;
        }
        if (l1) {
            l1 = l1->next;
        }
        if (l2) {
            l2 = l2->next;
        }
    }
    if (carry > 0) {
        tail->next = new ListNode(carry);  //边界条件(尾)
    }
    return head;
}